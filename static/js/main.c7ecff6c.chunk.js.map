{"version":3,"sources":["components/Navigation.js","components/Channel.js","routes/Schana.js","routes/Joychant.js","routes/Home.js","App.js","index.js"],"names":["Navigation","className","to","exact","document","cookie","Channel","id","imageLink","channelId","title","description","videos","subscribers","views","src","alt","href","target","Schana","state","apiKey","loading","playlistId","videoId","videoList","GetChannels","a","channelUrl","axios","get","data","console","log","items","snippet","thumbnails","medium","url","NumberWithCommas","statistics","videoCount","subscriberCount","viewCount","contentDetails","relatedPlaylists","uploads","setState","GetVideos","apiKeyParam","playListIdParam","playListItemsUrl","playListItems","len","length","idx","resourceId","this","x","toString","replace","key","map","allow","React","Component","Joychant","playListIdSeason1","videoIdSeason1","GetVideosLatest","GetPlaylist","channelID","playListUrl","GetVideosSeason1","Home","App","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c7ecff6c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navigation.css\";\n\n// 신촌하나교회\n// 조이챈트\n// 하나무브먼트\n// 하나워쉽무브먼트\n// 방배하나교회\n// 수원하나교회\nfunction Navigation() {\n    return (\n        <div className=\"nav-container\">\n            <div className=\"row nav-inner inner\">\n                <Link className=\"col-md-2 center-block btn btn-default\" to=\"/\" exact><i className=\"home fas fa-home\"></i></Link>\n                <Link className=\"col-md-2 center-block btn btn-default\" to=\"/schana\">신촌하나교회</Link>\n                <Link className=\"col-md-2 center-block btn btn-default\" to=\"/joychant\">조이챈트</Link>\n                <Link className=\"col-md-2 center-block btn btn-default\" to=\"/tbd1\">TBD</Link>\n                <Link className=\"col-md-2 center-block btn btn-default\" to=\"/tbd2\">TBD</Link>\n            </div>\n        </div>\n    );\n}\n\nexport default Navigation;\n\n//<Link to=\"/\"><Button variant=\"outline-success\" size=\"lg\" block><i className=\"home fas fa-home\"></i></Button></Link>\n//<Button variant=\"outline-success\" size=\"lg\" block><Link to=\"/schana\">신촌하나교회</Link></Button>\n//<Button variant=\"outline-success\" size=\"lg\" block><Link to=\"/joychant\">조이챈트</Link></Button>\n//<Button variant=\"outline-success\" size=\"lg\" block><Link to=\"/TBD1\">TBD</Link></Button>\n//<Button variant=\"outline-success\" size=\"lg\" block><Link to=\"/TBD2\">TBD</Link></Button>","import React from \"react\";\nimport \"./Channel.css\";\n// add comma for every 3 numbers\ndocument.cookie = 'safeCookie1=https://youtube.com; SameSite=Lax';\n\n\nfunction Channel({ id, imageLink, channelId, title, description, videos, subscribers, views }) {\n  return (\n    <div>\n      <div className=\"channel\">\n        <div className=\"channel_logo\">\n          <img className=\"channel_img\" src={imageLink} alt=\"text\"></img>\n          <a className=\"channel_link\" href={\"https://www.youtube.com/channel/\" + channelId} target=\"_black\">유튜브 채널 링크</a>\n        </div>\n        <ul className=\"channel_info\">\n          <li className=\"channel_item\"><strong>{title}</strong></li>\n          <li className=\"channel_item\">채널 설명: {description}</li>\n          <li className=\"channel_item\">영상수: {videos}</li>\n          <li className=\"channel_item\">구독자수: {subscribers}</li>\n          <li className=\"channel_item\">조회수: {views}</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Channel;","import React from \"react\";\nimport axios from 'axios';\nimport \"./Schana.css\";\nimport Channel from '../components/Channel';\n\nclass Schana extends React.Component {\n  state = {\n    id: 0,\n    apiKey: \"AIzaSyC6GWXm4z_sxkiMBkx08qYzmulaeM9aevA\",\n    loading: true,\n    channelId: \"UChzI-IJRRWNTdwkHeCs5PKg\",\n    imageLink: \"\",\n    title: \"\",\n    description: \"\",\n    videos: \"\",\n    subscribers: \"\",\n    views: \"\",\n    playlistId: \"\",\n    videoId: [\"\"],\n    videoList: {}\n  };\n\n  GetChannels = async () => {\n    // get channel data\n    const channelUrl = `https://www.googleapis.com/youtube/v3/channels?key=${this.state.apiKey}&id=${this.state.channelId}&part=snippet,contentDetails,statistics`;\n    const { data } = await axios.get(channelUrl);\n    console.log(data);\n\n    // parse received data\n    const imageLink = data.items[0].snippet.thumbnails.medium.url;\n    const title = data.items[0].snippet.title;\n    const description = data.items[0].snippet.description;\n    const videos = this.NumberWithCommas(data.items[0].statistics.videoCount);\n    const subscribers = this.NumberWithCommas(data.items[0].statistics.subscriberCount);\n    const views = this.NumberWithCommas(data.items[0].statistics.viewCount);\n    const playlistId = data.items[0].contentDetails.relatedPlaylists.uploads;\n\n    // update state\n    this.setState({ imageLink, title, description, videos, subscribers, views, playlistId });\n\n    this.GetVideos();\n  }\n\n  GetVideos = async () => {\n    // get playlistitem data\n    const baseUrl = \"https://www.googleapis.com/youtube/v3/playlistItems?\";\n    const apiKeyParam = `key=${this.state.apiKey}`;\n    const playListIdParam = `&playlistId=${this.state.playlistId}`;\n    const etcParam = \"&part=snippet&maxResults=12\";\n    const playListItemsUrl = baseUrl + apiKeyParam + playListIdParam + etcParam;\n    const { data } = await axios.get(playListItemsUrl);\n    console.log(data);\n\n    // parse received data\n    const playListItems = data.items;\n    const videoId = [];\n    const len = playListItems.length;\n    for (let idx = 0; idx < len; idx++) {\n      videoId[idx] = data.items[idx].snippet.resourceId.videoId;\n    }\n\n    console.log(videoId);\n\n    // update state\n    this.setState({ loading: false, videoId });\n  }\n\n  componentDidMount() {\n    this.GetChannels();\n  }\n\n  // add comma for every 3 numbers\n  NumberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"body\">\n        <div className=\"channel-container container\">\n          <h1 className=\"title\">유튜브 채널 정보</h1>\n          {\n            loading ?\n              <div className=\"loading-containger\">Process Loading</div>\n              :\n              <Channel\n                key={this.state.id}\n                imageLink={this.state.imageLink}\n                channelId={this.state.channelId}\n                title={this.state.title}\n                description={this.state.description}\n                videos={this.state.videos}\n                subscribers={this.state.subscribers}\n                views={this.state.views}\n              />\n          }\n        </div>\n        <div className=\"video-container container\">\n          <h1 className=\"video-title title\">최신 업로드 영상</h1>\n          <div className=\"video-items\">\n            {\n              loading ?\n                <div className=\"loading-containger\">Process Loading</div>\n                :\n                this.state.videoId.map((videoId) => (\n                  <div key={videoId} className=\"video-item-container\"><iframe title={videoId} className=\"video-item\" src={\"https://www.youtube.com/embed/\" + videoId} allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"></iframe></div>\n                ))\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Schana;","import React from \"react\";\nimport axios from 'axios';\nimport Channel from '../components/Channel';\n\nclass Joychant extends React.Component {\n  state = {\n    id: 1,\n    apiKey: \"AIzaSyC6GWXm4z_sxkiMBkx08qYzmulaeM9aevA\",\n    loading: true,\n    channelId: \"UCNF_5nwMVpkp3cTKlT9rvsg\",\n    //channelId                                                                                                            \n    imageLink: \"\",\n    title: \"\",\n    description: \"\",\n    videos: \"\",\n    subscribers: \"\",\n    views: \"\",\n    playlistId: \"\",\n    videoId: [],\n    videoList: {},\n    playListIdSeason1: \"\",\n    videoIdSeason1: []\n  };\n\n  GetChannels = async () => {\n    // get channel data\n    const channelUrl = `https://www.googleapis.com/youtube/v3/channels?key=${this.state.apiKey}&id=${this.state.channelId}&part=snippet,contentDetails,statistics`;\n    const { data } = await axios.get(channelUrl);\n    console.log(data);\n\n    // parse received data\n    const imageLink = data.items[0].snippet.thumbnails.medium.url;\n    const title = data.items[0].snippet.title;\n    const description = data.items[0].snippet.description;\n    const videos = data.items[0].statistics.videoCount;\n    const subscribers = data.items[0].statistics.subscriberCount;\n    const views = data.items[0].statistics.viewCount;\n    const playlistId = data.items[0].contentDetails.relatedPlaylists.uploads;\n\n    // update state\n    this.setState({ imageLink, title, description, videos, subscribers, views, playlistId });\n\n    this.GetVideosLatest();\n  }\n\n  GetVideosLatest = async () => {\n    // get playlistitem data\n    const baseUrl = \"https://www.googleapis.com/youtube/v3/playlistItems?\";\n    const apiKeyParam = `key=${this.state.apiKey}`;\n    const playListIdParam = `&playlistId=${this.state.playlistId}`;\n    const etcParam = \"&part=snippet&maxResults=12\";\n    const playListItemsUrl = baseUrl + apiKeyParam + playListIdParam + etcParam;\n\n    const { data } = await axios.get(playListItemsUrl);\n    console.log(data);\n\n    // parse received data\n    const playListItems = data.items;\n    const videoId = [];\n    const len = playListItems.length;\n    for (let idx = 0; idx < len; idx++) {\n      videoId[idx] = data.items[idx].snippet.resourceId.videoId;\n    }\n\n    console.log(videoId);\n\n    // update state\n    this.setState({ videoId });\n  }\n\n  GetPlaylist = async () => {\n    const baseUrl = \"https://www.googleapis.com/youtube/v3/playlists?\";\n    const apiKeyParam = `key=${this.state.apiKey}`;\n    const channelID = `&channelId=${this.state.channelId}`;\n    const etcParam = \"&part=snippet&maxResults=50\";\n    const playListUrl = baseUrl + apiKeyParam + channelID + etcParam;\n\n    const { data } = await axios.get(playListUrl);\n    console.log(data);\n    const playListIdSeason1 = data.items[5].id;\n\n    this.setState({ playListIdSeason1 });\n\n    this.GetVideosSeason1();\n  }\n\n  GetVideosSeason1 = async () => {\n    // get playlistitem data\n    const baseUrl = \"https://www.googleapis.com/youtube/v3/playlistItems?\";\n    const apiKeyParam = `key=${this.state.apiKey}`;\n    const playListIdParam = `&playlistId=${this.state.playListIdSeason1}`;\n    const etcParam = \"&part=snippet&maxResults=50\";\n    const playListItemsUrl = baseUrl + apiKeyParam + playListIdParam + etcParam;\n\n    const { data } = await axios.get(playListItemsUrl);\n    console.log(data);\n\n    // parse received data\n    const playListItems = data.items;\n    const videoIdSeason1 = [];\n    const len = playListItems.length;\n    for (let idx = 0; idx < len; idx++) {\n      videoIdSeason1[idx] = data.items[idx].snippet.resourceId.videoId;\n    }\n\n    console.log(videoIdSeason1);\n\n    // update state\n    this.setState({ videoIdSeason1 });\n  }\n\n  componentDidMount() {\n    this.GetChannels();\n    this.GetPlaylist();\n  }\n\n  // add comma for every 3 numbers\n  NumberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  render() {\n    return (\n      <div className=\"body\">\n        <div className=\"channel-container container\">\n          <h1 className=\"title\">유튜브 채널 정보</h1>\n          <Channel\n            key={this.state.id}\n            imageLink={this.state.imageLink}\n            channelId={this.state.channelId}\n            title={this.state.title}\n            description={this.state.description}\n            videos={this.state.videos}\n            subscribers={this.state.subscribers}\n            views={this.state.views}\n          />\n        </div>\n        <div className=\"video-container container\">\n          <h1 className=\"video-title title\">최신 업로드 영상</h1>\n          <div className=\"video-items\">\n            {\n              this.state.videoId.map((videoId) => (\n                <div key={videoId} className=\"video-item-container\"><iframe title={videoId} className=\"video-item\" src={\"https://www.youtube.com/embed/\" + videoId} allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"></iframe></div>\n              ))\n            }\n          </div>\n        </div>\n        <div className=\"video-container container\">\n          <h1 className=\"video-title title\">조이챈트 시즌1</h1>\n          <div className=\"video-items\">\n            {\n              this.state.videoIdSeason1.map((videoId) => (\n                <div key={videoId} className=\"video-item-container\"><iframe title={videoId} className=\"video-item\" src={\"https://www.youtube.com/embed/\" + videoId} allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"></iframe></div>\n              ))\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Joychant;","import React from \"react\";\n\nfunction Home() {\n  return (\n    <div className=\"home-container\">\n      <div className=\"inner\">\n        신촌하나교회 유튜브 소개 사이트\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import React from 'react';\n\nimport './App.css';\n// import 'bootstrap/dist/css/bootstrap.css';\n\n\nimport { HashRouter, Route } from \"react-router-dom\"\nimport Navigation from \"./components/Navigation\";\nimport Schana from \"./routes/Schana\";\nimport Joychant from \"./routes/Joychant\";\nimport Home from \"./routes/Home\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <HashRouter>\n        <Navigation />\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/schana\" component={Schana} />\n        <Route path=\"/joychant\" component={Joychant} />\n      </HashRouter>\n    );\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}