{"version":3,"sources":["components/Navigation.js","routes/Schana.js","routes/Joychant.js","App.js","index.js"],"names":["Navigation","className","to","Schana","state","apiKey","loading","channelId","imageLink","title","description","videos","subscribers","views","playlistId","videoId","videoList","GetChannels","a","channelUrl","axios","get","data","console","log","items","snippet","thumbnails","medium","url","statistics","videoCount","subscriberCount","viewCount","contentDetails","relatedPlaylists","uploads","setState","GetVideos","apiKeyParam","playListIdParam","playListItemsUrl","playListItems","len","length","idx","resourceId","this","x","toString","replace","src","alt","href","target","NumberWithCommas","map","item","React","Component","Joychant","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fc965b0.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navigation.css\";\n\n// 신촌하나교회\n// 조이챈트\n// 하나무브먼트\n// 하나워쉽무브먼트\n// 방배하나교회\n// 수원하나교회\nfunction Navigation() {\n    return (\n        <div className=\"container\">\n            <div className=\"nav\">\n                <Link to=\"/schana\">신촌하나교회</Link>\n                <Link to=\"/joychant\">조이챈트</Link>\n            </div>\n        </div>\n    );\n}\n\nexport default Navigation;","import React from \"react\";\nimport axios from 'axios';\nimport YouTube from 'react-youtube';\nimport \"./Schana.css\";\n\nclass Schana extends React.Component {\n  state = {\n    apiKey: \"AIzaSyC6GWXm4z_sxkiMBkx08qYzmulaeM9aevA\",\n    loading: true,\n    channelId: \"UChzI-IJRRWNTdwkHeCs5PKg\",\n    imageLink: \"\",\n    title: \"\",\n    description: \"\",\n    videos: \"\",\n    subscribers: \"\",\n    views: \"\",\n    playlistId: \"\",\n    videoId: [],\n    videoList: {}\n  };\n\n  GetChannels = async () => {\n    // get channel data\n    const channelUrl = `https://www.googleapis.com/youtube/v3/channels?key=${this.state.apiKey}&id=${this.state.channelId}&part=snippet,contentDetails,statistics`;\n    const { data } = await axios.get(channelUrl);\n    console.log(data);\n\n    // parse received data\n    const imageLink = data.items[0].snippet.thumbnails.medium.url;\n    const title = data.items[0].snippet.title;\n    const description = data.items[0].snippet.description;\n    const videos = data.items[0].statistics.videoCount;\n    const subscribers = data.items[0].statistics.subscriberCount;\n    const views = data.items[0].statistics.viewCount;\n    const playlistId = data.items[0].contentDetails.relatedPlaylists.uploads;\n\n    // update state\n    this.setState({ imageLink, title, description, videos, subscribers, views, playlistId });\n\n    this.GetVideos();\n  }\n\n  GetVideos = async () => {\n    // get playlistitem data\n    const baseUrl = \"https://www.googleapis.com/youtube/v3/playlistItems?\";\n    const apiKeyParam = `key=${this.state.apiKey}`;\n    const playListIdParam = `&playlistId=${this.state.playlistId}`;\n    const etcParam = \"&part=snippet&maxResults=12\";\n    const playListItemsUrl = baseUrl + apiKeyParam + playListIdParam + etcParam;\n    const { data } = await axios.get(playListItemsUrl);\n    console.log(data);\n\n    // parse received data\n    const playListItems = data.items;\n    const videoId = [];\n    const len = playListItems.length;\n    for (let idx = 0; idx < len; idx++) {\n      videoId[idx] = data.items[idx].snippet.resourceId.videoId;\n    }\n\n    console.log(videoId);\n\n    // update state\n    this.setState({ loading: false, videoId });\n  }\n\n  componentDidMount() {\n    this.GetChannels();\n  }\n\n  // add comma for every 3 numbers\n  NumberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  render() {\n    return (\n      <div className=\"body\">\n        <div className=\"channel-container container\">\n          <h1 className=\"title\">유튜브 채널 정보</h1>\n          <div className=\"channel\">\n            <div className=\"channel_logo\">\n              <img className=\"channel_img\" src={this.state.imageLink} alt=\"text\"></img>\n              <a className=\"channel_link\" href={\"https://www.youtube.com/channel/\" + this.state.channelId} target=\"_black\">유튜브 채널 링크</a>\n            </div>\n            <ul className=\"channel_info\">\n              <li className=\"channel_item\"><strong>{this.state.title}</strong></li>\n              <li className=\"channel_item\">채널 설명: {this.state.description}</li>\n              <li className=\"channel_item\">영상수: {this.NumberWithCommas(this.state.videos)}</li>\n              <li className=\"channel_item\">구독자수: {this.NumberWithCommas(this.state.subscribers)}</li>\n              <li className=\"channel_item\">조회수: {this.NumberWithCommas(this.state.views)}</li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"video-container container\">\n          <h1 className=\"video-title title\">최신 업로드 영상</h1>\n          <div className=\"video-items\">\n            {this.state.videoId.map((item) => (<div className=\"video-item-container\"><YouTube className=\"video-item\" videoId={item} /></div>))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Schana;","import React from \"react\";\nimport axios from 'axios';\nimport YouTube from 'react-youtube';\nimport \"./Joychant.css\";\n\nclass Joychant extends React.Component {\n  state = {\n    apiKey: \"AIzaSyC6GWXm4z_sxkiMBkx08qYzmulaeM9aevA\",\n    loading: true,\n    channelId: \"UCNF_5nwMVpkp3cTKlT9rvsg\",\n    //channelId: \"UChzI-IJRRWNTdwkHeCs5PKg\",\n    imageLink: \"\",\n    title: \"\",\n    description: \"\",\n    videos: \"\",\n    subscribers: \"\",\n    views: \"\",\n    playlistId: \"\",\n    videoId: [],\n    videoList: {}\n  };\n\n  GetChannels = async () => {\n    // get channel data\n    const channelUrl = `https://www.googleapis.com/youtube/v3/channels?key=${this.state.apiKey}&id=${this.state.channelId}&part=snippet,contentDetails,statistics`;\n    const { data } = await axios.get(channelUrl);\n    console.log(data);\n\n    // parse received data\n    const imageLink = data.items[0].snippet.thumbnails.medium.url;\n    const title = data.items[0].snippet.title;\n    const description = data.items[0].snippet.description;\n    const videos = data.items[0].statistics.videoCount;\n    const subscribers = data.items[0].statistics.subscriberCount;\n    const views = data.items[0].statistics.viewCount;\n    const playlistId = data.items[0].contentDetails.relatedPlaylists.uploads;\n\n    // update state\n    this.setState({ imageLink, title, description, videos, subscribers, views, playlistId });\n\n    this.GetVideos();\n  }\n\n  GetVideos = async () => {\n    // get playlistitem data\n    const baseUrl = \"https://www.googleapis.com/youtube/v3/playlistItems?\";\n    const apiKeyParam = `key=${this.state.apiKey}`;\n    const playListIdParam = `&playlistId=${this.state.playlistId}`;\n    const etcParam = \"&part=snippet&maxResults=12\";\n    const playListItemsUrl = baseUrl + apiKeyParam + playListIdParam + etcParam;\n    const { data } = await axios.get(playListItemsUrl);\n    console.log(data);\n\n    // parse received data\n    const playListItems = data.items;\n    const videoId = [];\n    const len = playListItems.length;\n    for (let idx = 0; idx < len; idx++) {\n      videoId[idx] = data.items[idx].snippet.resourceId.videoId;\n    }\n\n    console.log(videoId);\n\n    // update state\n    this.setState({ loading: false, videoId });\n  }\n\n  componentDidMount() {\n    this.GetChannels();\n  }\n\n  // add comma for every 3 numbers\n  NumberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  render() {\n    return (\n      <div className=\"body\">\n        <div className=\"channel-container container\">\n          <h1 className=\"title\">유튜브 채널 정보</h1>\n          <div className=\"channel\">\n            <div className=\"channel_logo\">\n              <img className=\"channel_img\" src={this.state.imageLink} alt=\"text\"></img>\n              <a className=\"channel_link\" href={\"https://www.youtube.com/channel/\" + this.state.channelId} target=\"_black\">유튜브 채널 링크</a>\n            </div>\n            <ul className=\"channel_info\">\n              <li className=\"channel_item\"><strong>{this.state.title}</strong></li>\n              <li className=\"channel_item\">채널 설명: {this.state.description}</li>\n              <li className=\"channel_item\">영상수: {this.NumberWithCommas(this.state.videos)}</li>\n              <li className=\"channel_item\">구독자수: {this.NumberWithCommas(this.state.subscribers)}</li>\n              <li className=\"channel_item\">조회수: {this.NumberWithCommas(this.state.views)}</li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"video-container container\">\n          <h1 className=\"video-title title\">최신 업로드 영상</h1>\n          <div className=\"video-items\">\n            {this.state.videoId.map((item) => (<div className=\"video-item-container\"><YouTube className=\"video-item\" videoId={item} /></div>))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Joychant;","import React from 'react';\n\nimport './App.css';\n// import 'bootstrap/dist/css/bootstrap.css';\n\n\nimport { HashRouter, Route } from \"react-router-dom\"\nimport Navigation from \"./components/Navigation\";\nimport Schana from \"./routes/Schana\";\nimport Joychant from \"./routes/Joychant\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <HashRouter>\n        <Navigation />\n        <Route path=\"/schana\" exact={true} component={Schana} />\n        <Route path=\"/joychant\" component={Joychant} />\n      </HashRouter>\n    );\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}