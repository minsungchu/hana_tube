{"version":3,"sources":["App.js","index.js"],"names":["App","state","apiKey","loading","channelId","imageLink","title","description","videos","subscribers","views","playlistId","videoId","videoList","GetChannels","a","channelUrl","axios","get","data","console","log","items","snippet","thumbnails","medium","url","statistics","videoCount","subscriberCount","viewCount","contentDetails","relatedPlaylists","uploads","setState","GetPlayListItems","apiKeyParam","playListIdParam","playListItemsUrl","playListItems","len","length","idx","resourceId","opts","height","width","map","item","this","x","toString","replace","className","src","alt","href","target","NumberWithCommas","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e16f5641.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport './App.css';\n// import 'bootstrap/dist/css/bootstrap.css';\nimport YouTube from 'react-youtube';\n\nclass App extends React.Component {\n  state = {\n    apiKey: \"AIzaSyC6GWXm4z_sxkiMBkx08qYzmulaeM9aevA\",\n    loading: true,\n    //channelId: \"UCNF_5nwMVpkp3cTKlT9rvsg\",\n    channelId: \"UChzI-IJRRWNTdwkHeCs5PKg\",\n    imageLink: \"\",\n    title: \"\",\n    description: \"\",\n    videos: \"\",\n    subscribers: \"\",\n    views: \"\",\n    playlistId: \"\",\n    videoId: [],\n    videoList: {}\n  };\n\n  GetChannels = async () => {\n    // get channel data\n    const channelUrl = `https://www.googleapis.com/youtube/v3/channels?key=${this.state.apiKey}&id=${this.state.channelId}&part=snippet,contentDetails,statistics`;\n    const { data } = await axios.get(channelUrl);\n    console.log(data);\n\n    // parse received data\n    const imageLink = data.items[0].snippet.thumbnails.medium.url;\n    const title = data.items[0].snippet.title;\n    const description = data.items[0].snippet.description;\n    const videos = data.items[0].statistics.videoCount;\n    const subscribers = data.items[0].statistics.subscriberCount;\n    const views = data.items[0].statistics.viewCount;\n    const playlistId = data.items[0].contentDetails.relatedPlaylists.uploads;\n\n    // update state\n    this.setState({ imageLink, title, description, videos, subscribers, views, playlistId });\n\n    this.GetPlayListItems();\n  }\n\n  GetPlayListItems = async () => {\n    // get playlistitem data\n    const baseUrl = \"https://www.googleapis.com/youtube/v3/playlistItems?\";\n    const apiKeyParam = `key=${this.state.apiKey}`;\n    const playListIdParam = `&playlistId=${this.state.playlistId}`;\n    const etcParam = \"&part=snippet&maxResults=12\";\n    const playListItemsUrl = baseUrl + apiKeyParam + playListIdParam + etcParam;\n    const { data } = await axios.get(playListItemsUrl);\n    console.log(data);\n\n    // parse received data\n    const playListItems = data.items;\n    const videoId = [];\n    const len = playListItems.length;\n    for (let idx = 0; idx < len; idx++) {\n      videoId[idx] = data.items[idx].snippet.resourceId.videoId;\n    }\n\n    console.log(videoId);\n\n    const opts = {\n      height: '100',\n      width: '200'\n    };\n    const videoList = videoId.map((item) => (<YouTube videoId={item} opts={opts} />));\n    console.log(videoList);\n\n    // update state\n    this.setState({ loading: false, videoId });\n  }\n\n  componentDidMount() {\n    this.GetChannels();\n  }\n\n  // add comma for every 3 numbers\n  NumberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  render() {\n    const opts = {\n      height: '630',\n      width: '600'\n    };\n    return (\n      <div className=\"body\">\n        <div className=\"channel-container container\">\n          <h1 className=\"title\">Youtube Channel Info</h1>\n          <div className=\"channel\">\n            <div className=\"channel_logo\">\n              <img className=\"channel_img\" src={this.state.imageLink} alt=\"text\"></img>\n              <a className=\"channel_link\" href={\"https://www.youtube.com/channel/\" + this.state.channelId} target=\"_black\">Go to Youtube Channel</a>\n            </div>\n            <ul className=\"channel_info\">\n              <li className=\"channel_item\"><strong>YOUTUBE CHANNEL: {this.state.title}</strong></li>\n              <li className=\"channel_item\"><strong>CHANNEL DESCRIPTION: {this.state.description}</strong></li>\n              <li className=\"channel_item\"><strong>VIDEOS: {this.NumberWithCommas(this.state.videos)}</strong></li>\n              <li className=\"channel_item\"><strong>SUBSCRIBERS: {this.NumberWithCommas(this.state.subscribers)}</strong></li>\n              <li className=\"channel_item\"><strong>VIEWS: {this.NumberWithCommas(this.state.views)}</strong></li>\n            </ul>\n          </div>\n\n        </div>\n\n\n        <div className=\"video-container container\">\n          <h1 className=\"video-title title\">Latest Youtube Videos</h1>\n          <div className=\"video-items\">\n            {this.state.videoId.map((item) => (<YouTube className=\"video-item\" videoId={item} opts={opts} />))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}